// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: users.sql

package store

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (user_id, full_name, username, gender, birth_date, password, role)
VALUES (gen_random_uuid(), $1, $2, $3, $4, $5, $6) RETURNING user_id
`

type CreateUserParams struct {
	FullName  string    `json:"full_name"`
	Username  string    `json:"username"`
	Gender    string    `json:"gender"`
	BirthDate time.Time `json:"birth_date"`
	Password  string    `json:"password"`
	Role      string    `json:"role"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (uuid.UUID, error) {
	row := q.queryRow(ctx, q.createUserStmt, createUser,
		arg.FullName,
		arg.Username,
		arg.Gender,
		arg.BirthDate,
		arg.Password,
		arg.Role,
	)
	var user_id uuid.UUID
	err := row.Scan(&user_id)
	return user_id, err
}

const getUserByID = `-- name: GetUserByID :one
SELECT user_id, full_name, username, gender, birth_date, role
FROM users
WHERE user_id = $1
LIMIT 1
`

type GetUserByIDRow struct {
	UserID    uuid.UUID `json:"user_id"`
	FullName  string    `json:"full_name"`
	Username  string    `json:"username"`
	Gender    string    `json:"gender"`
	BirthDate time.Time `json:"birth_date"`
	Role      string    `json:"role"`
}

func (q *Queries) GetUserByID(ctx context.Context, userID uuid.UUID) (GetUserByIDRow, error) {
	row := q.queryRow(ctx, q.getUserByIDStmt, getUserByID, userID)
	var i GetUserByIDRow
	err := row.Scan(
		&i.UserID,
		&i.FullName,
		&i.Username,
		&i.Gender,
		&i.BirthDate,
		&i.Role,
	)
	return i, err
}

const getUserByUsername = `-- name: GetUserByUsername :one
SELECT user_id, full_name, username, gender, birth_date, password, role
FROM users
WHERE username = $1
LIMIT 1
`

func (q *Queries) GetUserByUsername(ctx context.Context, username string) (Users, error) {
	row := q.queryRow(ctx, q.getUserByUsernameStmt, getUserByUsername, username)
	var i Users
	err := row.Scan(
		&i.UserID,
		&i.FullName,
		&i.Username,
		&i.Gender,
		&i.BirthDate,
		&i.Password,
		&i.Role,
	)
	return i, err
}
